<!DOCTYPE html>
<html>
<head>
  <title>AwesomeAnswers</title>
  <%= stylesheet_link_tag    'application', media: 'all', 'data-turbolinks-track' => true %>
  <%= javascript_include_tag 'application', 'data-turbolinks-track' => true %>
  <%= csrf_meta_tags %>
</head>
<body>
  <div class="container-fluid">
    <%= render "/layouts/nav" %>
    <%= render "/_flash_messages.html.erb" %>
    <!-- can also use span instead of i -->
    <!-- <a href="<%= hello_path %>">Hello</a> -->
    <!-- link_to is called a view helper. link_to is built in with Rails.
      It generates an anchor HTML tag. This is a preferable to using a href tags.
      link_to will give you features not available with a href, ie with JS.
      Ie, can use method: POST, and then when the link is clicked,
      the method will be HTTP verb POST instead of GET (regular/default when clicking on a link)-->
    <!-- We need to add .html_safe to the string in order for Rails not to escape
          the HTML inside the string. By default, RAils assumes that strings are not safe
          as they may be input from users which may contain malicious
        script tags. Rails requires you to be explicit when strings are safe by
      calling .html_safe method-->
      <!-- Rails assumes all strings are not safe in case of injection hacking attempts -->
    <hr>
      <!-- <#% alert if something went wrong; notice if something went right %> -->

    <!-- OR::
    <%= link_to("Greeting", greeting_path("Jade")) %>
  -->
    <!-- <%= index_path %>
    <hr>
    <%= index_url %>
    <hr> -->
    <%= yield %>
  </div>

</body>
</html>
